#filter {
#  if [type] == "syslog" {
#    grok {
#      patterns_dir => ["/etc/logstash/patterns"]
#      match => [ "message", "%{FAIL2BAN_BAN}" ]
#      add_tag => [ "ban" ]
#      named_captures_only => true
#    }
#    grok {
#      patterns_dir => [ "/etc/logstash/patterns" ]
#      match => [ "message", "%{FAIL2BAN_UNBAN}" ]
#      add_tag => [ "unban" ]
#      named_captures_only => true
#    }
#    grok {
#      patterns_dir => [ "/etc/logstash/patterns" ]
#      match => [ "message", "%{FAIL2BAN_ALREADYBAN}" ]
#      add_tag => [ "already_ban" ]
#      named_captures_only => true
#    }
#
#    mutate {
#      remove_tag => ["_grokparsefailure"]
#    }
#  }
#}

filter {
  	if[type] == "failban" {
		grok {
			match => [ "message", "^%{TIMESTAMP_ISO8601:timestamp} fail2ban\.actions: %{WORD:level} \\[%{WORD:program}\\] %{WORD:action} %{IP:ip}" ]
		}
		geoip {
		    source => "clientip"
		    target => "geoip"
		    database => "/etc/logstash/GeoLiteCity.dat"
		    add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
		    add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]
		}
		mutate {
		    convert => [ "[geoip][coordinates]", "float" ]
		}
	}
}