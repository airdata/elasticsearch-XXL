filter {
  if [type] == "nginx-access" {
    grok {
      patterns_dir => "/etc/logstash/patterns"
      match => { "message" => "%{NGINXACCESS}" }
      add_tag => ["nginx_access"]
    }

   geoip {
     source => "nginx_clientip"
     target => "nginx_geoip"
     database => "/etc/logstash/GeoLiteCity.dat"
     add_field => [ "[nginx_geoip][coordinates]", "%{[nginx_geoip][longitude]}" ]
     add_field => [ "[nginx_geoip][coordinates]", "%{[nginx_geoip][latitude]}"  ]
   }

   date {
      match => ["syslog_timestamp",
        "MMM  d HH:mm:ss",
        "MMM dd HH:mm:ss",
        "MMM  d yyyy HH:mm:ss",
        "MMM dd yyyy HH:mm:ss",
        "yyyy-MM-dd HH:mm:ss,SSS",
        "ISO8601",
        "dd/MMM/yyyy:HH:mm:ss Z"
      ]
    }
    mutate {
      convert => [ "[nginx_clientip][coordinates]", "float"]
   }
 }

   if [type] == "nginx-error" {
    grok {  
	match => [
	"message", "(?<timestamp>%{YEAR}[./-]%{MONTHNUM}[./-]%{MONTHDAY}[- ]%{TIME}) \[%{LOGLEVEL:severity}\] %{POSINT:pid}#%{NUMBER}: %{GREEDYDATA:errormessage}(?:, client: (?<nginx_clientip>%{IP}|%{HOSTNAME}))(?:, server: %{IPORHOST:server})(?:, request: %{QS:request}) ??(?:, host: %{QS:host})",	
	"message", "(?<timestamp>%{YEAR}[./-]%{MONTHNUM}[./-]%{MONTHDAY}[- ]%{TIME}) \[%{LOGLEVEL:severity}\] %{POSINT:pid}#%{NUMBER}: %{GREEDYDATA:errormessage}(?:, client: (?<nginx_clientip>%{IP}|%{HOSTNAME}))(?:, server: %{IPORHOST:server})(?:, request: %{QS:request})(?:, upstream: %{QS:upstream})(?:;, host: %{QS:host})(?:, referrer: \"%{URI:referrer})"
	 ]
	overwrite => [ "message" ]
	add_tag => [ "nginx_error" ]
    }
    
    geoip {
     source => "nginx_clientip"
     target => "nginx_geoip"
     database => "/etc/logstash/GeoLiteCity.dat"
     add_field => [ "[nginx_geoip][coordinates]", "%{[nginx_geoip][longitude]}" ]
     add_field => [ "[nginx_geoip][coordinates]", "%{[nginx_geoip][latitude]}"  ]
    }
    date {
		match => [ "timestamp" , "YYYY/MM/dd HH:mm:ss" ]
		remove_field => [ "timestamp" ]
		}
    mutate {
      convert => [ "[nginx_geoip][coordinates]", "float"]
   }
 }
}
